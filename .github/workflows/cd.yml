name: CD Pipeline

on:
  push:
    branches:
      - main
      
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy (default: main)'
        required: false
        default: 'main'
      repository-uri:
        description: 'ECR repository URI (e.g. 123456789012.dkr.ecr.us-west-2.amazonaws.com/my-repo)'
        required: true
      jib-config-file:
        description: 'Path to the Jib configuration file (default: jib.yaml)'
        required: false
        default: 'jib.yaml'
      aws-region:
        description: 'AWS region to use'
        required: false
        default: 'ap-northeast-2'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup jib
        uses: oyg-pf-dev-prep/github-actions/.github/workflows/setup-jib-v1@main

      - name: Ecr login
        uses: oyg-pf-dev-prep/github-actions/.github/workflows/ecr-login-v1@main
        with:
          repository-uri: '484907487980.dkr.ecr.ap-northeast-2.amazonaws.com/sample-cicd-pub'

      # - name: Build Docker image using Jib
      #   run: |
      #     ./gradlew jib --build-file ${{ github.event.inputs.jib_config_file }} --image=${{ github.event.inputs.ecr_repository_uri }}:${{ github.sha }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: arn:aws:iam::484907487980:role/GithubRole
      #     aws-region: ap-northeast-2

      # - name: Login to Amazon ECR
      #   id: ecr-login
      #   run: |
      #     aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ github.event.inputs.ecr_repository_uri }}

      # - name: Push Container image to ECR
      #   run: |
      #     aws ecr describe-repositories --repository-names "${{ github.event.inputs.ecr_repository_uri }}" || \
      #     aws ecr create-repository --repository-name "${{ github.event.inputs.ecr_repository_uri }}"
      #     docker push ${{ github.event.inputs.ecr_repository_uri }}:${{ github.sha }}
